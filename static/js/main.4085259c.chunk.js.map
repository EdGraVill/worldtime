{"version":3,"sources":["util.ts","WorldTime/slicer.ts","api.ts","Search/slicer.ts","Search/selectors.ts","Search/sagas.ts","Search/Search.tsx","WorldTime/selectors.ts","WorldTime/sagas.ts","store/setupStore.ts","store/StoreProvider.tsx","WorldTime/Selector.tsx","WorldTime/Clock.tsx","WorldTime/Graph.tsx","WorldTime/Name.tsx","WorldTime/Timezone.tsx","WorldTime/HomeTimezone.tsx","WorldTime/Timezones.tsx","WorldTime/WorldTime.tsx","App.tsx","index.tsx"],"names":["preserve","key","value","localStorage","setItem","JSON","stringify","recover","placeholder","item","getItem","parse","undefined","remSize","parseFloat","getComputedStyle","document","documentElement","fontSize","getUTCNow","Date","toUTCString","getTimeInitialState","home","isFetching","list","selected","createSlice","initialState","name","reducers","fetchTimezone","state","action","fulfillTimezone","payload","left","right","draft","reduce","prev","curr","forEach","element","Object","values","mergeToLeftWithKey","timezone","setHomeTimezone","selectedIx","indexOf","switchTimezone","push","splice","timeActions","actions","timeReducerName","timeReducer","reducer","BASE_URL","getAvailableTimezones","a","fetch","request","json","getTimezone","getCurrentTimezone","getSearchInitialState","lastSelection","suggestions","fetchSuggestions","fulfillSuggestions","setLastSelection","searchActions","searchReducerName","searchReducer","searchRootStateSelector","search","suggestionsSelector","createSelector","isSearchFetching","lastSearch","fetchSuggestionsEffect","searchSagas","call","put","takeLatest","type","Input","styled","input","Search","dispatch","useDispatch","useSelector","unique","React","setValue","onChange","event","currentTarget","onKeyDown","onInput","nativeEvent","InputEvent","setTimeout","onInputCapture","id","map","suggestion","timeRootStateSelector","time","timezoneListSelector","homeTimezoneSelector","find","selectedTimezoneSelector","timezoneSelector","tz","fetchTimezoneEffect","setSearchEffect","timeSagas","timeZone","select","console","log","takeEvery","mapReducers","setupStore","preloadedState","sagaMiddleware","createSagaMiddleware","store","configureStore","combineReducers","devTools","process","middleware","getDefaultMiddleware","run","StoreProvider","children","Container","div","attrs","diff","style","amount","css","Selector","localTime","getElementsByClassName","graph","setGraph","initialLeft","offsetLeft","getHours","setLeft","scrollMove","setScrollMove","lastMovement","setLastMovement","moved","setMoved","handler","container","scrollLeft","addEventListener","removeEventListener","onMouseDown","downEvent","startPoint","pageX","movement","moveHandler","upHandler","window","finalLeft","toFixed","split","hours","preMinutes","length","onDoubleClick","Number","CurrentDate","Clock","utcToZonedTime","setTime","interval","setInterval","clearInterval","format","date","currentTime","dow","hh","mm","ss","separator","Content","Hour","hour","isDST","day","month","backgroundGetter","colorGetter","Graph","homeTimezone","tzCurrent","tzHome","differenceInMinutes","className","Array","fill","_","ix","refHour","Math","round","hourCalc","subMinutes","addHours","Region","span","Name","replace","region","Buttons","AbbreviationContainer","Abbreviation","HomeIcon","i","IconButton","button","color","Timezone","isHome","current","setHome","onClick","abbreviation","dst","HomeTimezone","setLocalTime","scrollTo","behavior","dispatchEvent","Event","then","Timezones","elements","from","arr","ne","nix","syncScrolls","WorldTime","GlobalStyle","createGlobalStyle","Presentation","App","globalThis","testView","render","getElementById"],"mappings":"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","file":"static/js/main.4085259c.chunk.js","sourcesContent":["export const mergeToLeftWithKey = <T, K extends keyof T>(left: T[], right: T[], key: K): T[] => {\n  const draft: { [key: string]: T } = left.reduce((prev, curr) => ({\n    ...prev,\n    [curr[key] as unknown as string]: curr,\n  }), {});\n\n  right.forEach((element) => {\n    draft[element[key] as unknown as string] = element;\n  });\n\n  return Object.values(draft);\n};\n\nexport const PRESERVATION_SUFIX = '@preservation';\n\nexport const preserve = <T>(key: string, value: T): T => {\n  localStorage.setItem(`${PRESERVATION_SUFIX}/${key}`, JSON.stringify({ value }));\n\n  return value;\n};\n\nexport function recover<T>(key: string, placeholder: undefined): T | undefined;\nexport function recover<T>(key: string, placeholder: T): T;\nexport function recover<T>(key: string, placeholder: T | undefined): T | undefined {\n  const item = localStorage.getItem(`${PRESERVATION_SUFIX}/${key}`);\n  const { value } = JSON.parse(item || '{ \"value\": null }');\n\n  return value || placeholder || undefined;\n};\n\nexport const mapArrayWithKey = <T, K extends keyof T>(array: T[], key: K): { [unique: string]: T } =>\n  array.reduce((prev, curr) => ({\n    ...prev,\n    [curr[key] as unknown as string]: curr,\n  }), {});\n\nexport const remSize = parseFloat(getComputedStyle(document.documentElement).fontSize);\n\nexport const syncScrolls = () => {\n  const elements = document.getElementsByClassName('worldtime-graph');\n\n  Array.from(elements).forEach((element, ix, arr) => {\n    element.addEventListener('scroll', (event) => {\n      arr.forEach((ne, nix) => {\n        if (nix !== ix) {\n          ne.scrollLeft = (event.currentTarget as HTMLInputElement).scrollLeft;\n        }\n      });\n    });\n  });\n}\n\nexport const getUTCNow = () => new Date(new Date().toUTCString());\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { TimeZone } from \"../commonTypes\";\nimport { mergeToLeftWithKey, preserve, recover } from \"../util\";\n\nexport const getTimeInitialState = () => ({\n  home: recover<string | null>('time/home', null),\n  isFetching: false as boolean,\n  list: recover<TimeZone[]>('time/list', []),\n  selected: recover<string[]>('time/selected', []),\n});\n\nexport type TimeState = ReturnType<typeof getTimeInitialState>;\n\nexport const { actions: timeActions, name: timeReducerName, reducer: timeReducer } = createSlice({\n  initialState: getTimeInitialState(),\n  name: 'time',\n  reducers: {\n    fetchTimezone(state, action: PayloadAction<string>) {\n      state.isFetching = true;\n    },\n    fulfillTimezone(state, { payload }: PayloadAction<TimeZone>) {\n      state.isFetching = false;\n      state.list = preserve('time/list', mergeToLeftWithKey(state.list, payload.timezone ? [payload] : [], 'timezone'));\n    },\n    setHomeTimezone(state, { payload }: PayloadAction<string>) {\n      const selectedIx = state.selected.indexOf(payload);\n\n      if (selectedIx >= 0 && state.home) {\n        state.selected[selectedIx] = state.home;\n      }\n\n      state.home = preserve('time/home', payload);\n      state.selected = preserve('time/selected', state.selected);\n    },\n    switchTimezone(state, { payload }) {\n      const selectedIx = state.selected.indexOf(payload);\n\n      if (selectedIx === -1) {\n        state.selected.push(payload);\n      } else {\n        state.selected.splice(selectedIx, 1);\n      }\n\n      preserve('time/selected', state.selected);\n    },\n  },\n});\n","import { TimeZone } from \"./commonTypes\";\n\nexport const BASE_URL = 'https://worldtimeapi.org/api';\n\nexport const getAvailableTimezones = async (): Promise<string[]> => {\n  const request = await fetch(`${BASE_URL}/timezone`);\n\n  return request.json();\n};\n\nexport const getTimezone = async (timezone: string): Promise<TimeZone> => {\n  const request = await fetch(`${BASE_URL}/timezone/${timezone}`);\n\n  return request.json();\n};\n\nexport const getCurrentTimezone = async (): Promise<TimeZone> => {\n  const request = await fetch(`${BASE_URL}/ip`);\n\n  return request.json();\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { preserve, recover } from \"../util\";\n\nexport const getSearchInitialState = () => ({\n  isFetching: false,\n  lastSelection: null as string | null,\n  suggestions: recover<string[]>('search/suggestions', []),\n});\n\nexport type SearchState = ReturnType<typeof getSearchInitialState>;\n\nexport const { actions: searchActions, name: searchReducerName, reducer: searchReducer } = createSlice({\n  initialState: getSearchInitialState(),\n  name: 'search',\n  reducers: {\n    fetchSuggestions(state) {\n      state.isFetching = true;\n    },\n    fulfillSuggestions(state, { payload }: PayloadAction<string[]>) {\n      state.isFetching = false;\n      state.suggestions = preserve('search/suggestions', payload);\n    },\n    setLastSelection(state, { payload }: PayloadAction<string>) {\n      state.lastSelection = payload;\n    },\n  },\n});\n","import { createSelector } from \"@reduxjs/toolkit\";\nimport { State } from \"../store\";\nimport { getSearchInitialState } from \"./slicer\";\n\nexport const searchRootStateSelector = (state: State) => state.search || getSearchInitialState();\n\nexport const suggestionsSelector = createSelector(\n  searchRootStateSelector,\n  ({ suggestions }) => suggestions,\n);\n\nexport const isSearchFetching = createSelector(\n  searchRootStateSelector,\n  ({ isFetching }) => isFetching,\n);\n\nexport const lastSearch = createSelector(\n  searchRootStateSelector,\n  ({ lastSelection }) => lastSelection,\n);\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { getAvailableTimezones } from \"../api\";\nimport { searchActions } from \"./slicer\";\n\nexport function* fetchSuggestionsEffect() {\n  const suggestions: string[] = yield call(getAvailableTimezones);\n\n  yield put(searchActions.fulfillSuggestions(suggestions));\n}\n\nexport function* searchSagas() {\n  yield takeLatest(searchActions.fetchSuggestions.type, fetchSuggestionsEffect);\n}\n","import * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { suggestionsSelector } from './selectors';\nimport { searchActions } from './slicer';\n\nconst Input = styled.input`\n  border-radius: .5rem;\n  max-width: 15rem;\n  padding: .3rem .75rem;\n  width: 50%;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Search: React.FC = () => {\n  const dispatch = useDispatch();\n  const suggestions = useSelector(suggestionsSelector);\n  const unique = 'WorldTime_suggestionlist';\n\n  const [value, setValue] = React.useState('');\n\n  React.useEffect(() => {\n    dispatch(searchActions.fetchSuggestions());\n  }, [dispatch]);\n\n  const onChange = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.currentTarget.value);\n  }, [])\n\n  const onKeyDown = React.useCallback((event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      const isValid = suggestions.indexOf(value) >= 0;\n\n      if (isValid) {\n        dispatch(searchActions.setLastSelection(value));\n      }\n    }\n  }, [dispatch, suggestions, value]);\n\n  const onInput = React.useCallback((event: React.FormEvent<HTMLInputElement>) => {\n    if (!(event.nativeEvent instanceof InputEvent)) {\n      dispatch(searchActions.setLastSelection(event.currentTarget.value));\n      setTimeout(() => setValue(''), 1000);\n    }\n  }, [dispatch]);\n\n  return (\n    <>\n      <Input\n        list={unique}\n        onChange={onChange}\n        onInputCapture={onInput}\n        onKeyDown={onKeyDown}\n        placeholder=\"Find timezone\"\n        value={value}\n      />\n      <datalist id={unique}>\n        {suggestions.map(suggestion => <option key={suggestion}>{suggestion}</option>)}\n      </datalist>\n    </>\n  );\n};\n\nexport default Search;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { State } from '../store';\nimport { getTimeInitialState } from './slicer';\n\nexport const timeRootStateSelector = (state: State) => state.time || getTimeInitialState();\n\nexport const timezoneListSelector = createSelector(\n  timeRootStateSelector,\n  ({ list }) => list,\n);\n\nexport const homeTimezoneSelector = createSelector(\n  timeRootStateSelector,\n  ({ home, list }) => list.find(({ timezone }) => timezone === home) || null,\n);\n\nexport const selectedTimezoneSelector = createSelector(\n  timeRootStateSelector,\n  ({ selected }) => selected,\n);\n\nexport const timezoneSelector = (timezone: string) => createSelector(\n  timeRootStateSelector,\n  ({ list }) => list.find(tz => tz.timezone === timezone) || null,\n);\n","import { call, put, select, takeEvery } from 'redux-saga/effects';\nimport { getTimezone } from '../api';\nimport { TimeZone } from '../commonTypes';\nimport { searchActions } from '../Search';\nimport { homeTimezoneSelector, selectedTimezoneSelector } from './selectors';\nimport { timeActions } from './slicer';\n\nexport function* fetchTimezoneEffect({ payload }: ReturnType<typeof timeActions.fetchTimezone>) {\n  const timeZone: TimeZone = yield call(getTimezone, payload);\n\n  yield put(timeActions.fulfillTimezone(timeZone));\n}\n\nexport function* setSearchEffect({ payload }: ReturnType<typeof searchActions.setLastSelection>) {\n  const selected: string[] = yield select(selectedTimezoneSelector);\n  const home: TimeZone = yield select(homeTimezoneSelector);\n\n  console.log(payload);\n\n  if (selected.indexOf(payload) === -1 && home.timezone !== payload) {\n    yield put(timeActions.switchTimezone(payload));\n  }\n}\n\nexport function* timeSagas() {\n  yield takeEvery(timeActions.fetchTimezone.type, fetchTimezoneEffect);\n  yield takeEvery(searchActions.setLastSelection.type, setSearchEffect)\n}\n","import { combineReducers, configureStore, DeepPartial, getDefaultMiddleware, StateFromReducersMapObject } from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from 'redux-saga';\nimport { timeReducer, timeReducerName, timeSagas } from \"../WorldTime\";\nimport { searchReducer, searchReducerName, searchSagas } from \"../Search\";\n\nexport const mapReducers = {\n  [timeReducerName]: timeReducer,\n  [searchReducerName]: searchReducer,\n};\n\nexport type State = StateFromReducersMapObject<typeof mapReducers>;\n\nexport const setupStore = (preloadedState?: DeepPartial<State>) => {\n  const sagaMiddleware = createSagaMiddleware();\n  \n  const store = configureStore({\n    reducer: combineReducers(mapReducers),\n    devTools: process.env.NODE_ENV !== 'production',\n    middleware: [...getDefaultMiddleware(), sagaMiddleware],\n    preloadedState,\n  });\n\n  sagaMiddleware.run(timeSagas);\n  sagaMiddleware.run(searchSagas);\n\n  return store;\n};\n","import * as React from 'react';\nimport { Provider } from 'react-redux';\nimport { setupStore } from './setupStore';\n\nconst StoreProvider: React.FC = ({ children }) => {\n  const store = React.useMemo(setupStore, []);\n\n  return (\n    <Provider store={store}>\n      {children}\n    </Provider>\n  );\n};\n\nexport default StoreProvider;\n","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport styled, { css } from 'styled-components';\nimport { remSize } from '../util';\nimport { selectedTimezoneSelector } from './selectors';\n\nconst Container = styled.div.attrs<{ amount: number, left: number, diff: number }>(({ diff, left }) => ({\n  style: {\n    left: left - (diff < 0 ? diff : 0),\n  },\n}))<{ amount: number, left: number, diff: number }>`\n  ${({ amount, diff }) => css`\n    align-items: center;\n    background-color: #e74c3c33;\n    border-bottom: .5rem solid #e74c3c;\n    border-left: 1px solid #e74c3c;\n    border-radius: .5rem;\n    border-right: 1px solid #e74c3c;\n    border-top: .5rem solid #e74c3c;\n    ${diff < ((-remSize * 2.5) + 2) ? 'border: 0;' : ''}\n    cursor: grab;\n    display: flex;\n    flex-flow: column nowrap;\n    height: ${(amount * 6) - 1}rem;\n    position: absolute;\n    top: -1rem;\n    width: calc(2.5rem + ${diff < 0 ? diff : 0}px);\n\n    &:active {\n      cursor: grabbing;\n    }\n\n    & > span {\n      font-size: .6rem;\n      margin-bottom: 5.3rem;\n    }\n  `}\n`;\n\ninterface Props {\n  localTime: Date;\n}\n\nconst Selector: React.FC<Props> = ({ localTime }) => {\n  const [graph, setGraph] = React.useState<HTMLDivElement>(document.getElementsByClassName('worldtime-graph')[0] as HTMLDivElement);\n  const list = useSelector(selectedTimezoneSelector);\n  \n  const initialLeft = React.useMemo(() => graph?.offsetLeft - (remSize / 4) + (localTime.getHours() * remSize * 2) || 0, [graph, localTime]);\n\n  const [left, setLeft] = React.useState(initialLeft);\n  const [scrollMove, setScrollMove] = React.useState(0);\n  const [lastMovement, setLastMovement] = React.useState(0);\n  const [moved, setMoved] = React.useState(0);\n\n  React.useEffect(() => {\n    if (!graph) {\n      setTimeout(() => {\n        setGraph(document.getElementsByClassName('worldtime-graph')[0] as HTMLDivElement);\n      }, 10);\n    } else {\n      const handler = (event: Event) => {\n        const container = ((event.currentTarget as HTMLInputElement));\n\n        setScrollMove(container.scrollLeft);\n      };\n\n      graph.addEventListener('scroll', handler);\n\n      return () => {\n        graph.removeEventListener('scroll', handler);\n      }\n    }\n  }, [graph, initialLeft]);\n\n  React.useEffect(() => {\n    setLeft(initialLeft);\n  }, [initialLeft]);\n\n  const onMouseDown = React.useCallback((downEvent: React.MouseEvent<HTMLInputElement>) => {\n    const startPoint = downEvent.pageX;\n    let movement = 0;\n    const moveHandler = (event: MouseEvent) => {\n      setMoved(event.pageX - startPoint);\n      movement = event.pageX - startPoint;\n    };\n    const upHandler = () => {\n      window.removeEventListener('mousemove', moveHandler);\n      window.removeEventListener('mouseup', upHandler);\n      setLastMovement(lastMovement + movement);\n      setMoved(0);\n    }\n\n    window.addEventListener('mousemove', moveHandler);\n    window.addEventListener('mouseup', upHandler);\n    window.addEventListener('mouseleave', upHandler);\n  }, [lastMovement]);\n\n  React.useEffect(() => {\n    if (graph && left !== 0 && (left - graph.offsetLeft + 4 + lastMovement) < 0) {\n      setLastMovement(-(left - graph.offsetLeft + 4));\n    } if (left !== 0 && lastMovement >= (remSize * 23 * 2) - (left - graph.offsetLeft + 4)) {\n      setLastMovement((remSize * 23 * 2) - (left - graph.offsetLeft + 4));\n    }\n  }, [graph, lastMovement, left]);\n\n  if (left === 0) {\n    return null;\n  }\n\n  const finalLeft = lastMovement + moved + left - scrollMove;\n  const [hours, preMinutes] = ((finalLeft + scrollMove - remSize - 4) / (remSize * 2) - 12).toFixed(2).split('.');\n\n  return (\n    <Container\n      amount={list.length + 1}\n      diff={finalLeft - graph.offsetLeft + 4}\n      left={finalLeft}\n      onDoubleClick={() => setLastMovement(0)}\n      onMouseDown={onMouseDown}\n    >\n      <span>\n        {(Number(hours) / 100).toFixed(2).split('.')[1]}:{((Number(preMinutes) * 60) / 10000).toFixed(2).split('.')[1]}\n      </span>\n      {/* {list.map(() => (\n        <>\n          <span>\n            {(Number(hours) / 100).toFixed(2).split('.')[1]}:{((Number(preMinutes) * 60) / 10000).toFixed(2).split('.')[1]}\n          </span>\n        </>\n      ))} */}\n    </Container>\n  );\n};\n\nexport default Selector;\n","import { format } from 'date-fns';\nimport { utcToZonedTime } from 'date-fns-tz';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { getUTCNow } from '../util';\n\nconst Container = styled.div`\n  align-items: flex-end;\n  display: flex;\n  flex: 1;\n  flex-flow: column nowrap;\n  justify-content: center;\n`;\n\nconst CurrentDate = styled.div`\n  color: #777;\n  font-size: .7rem;\n`;\n\ninterface Props {\n  timezone: string;\n}\n\nconst Clock: React.FC<Props> = ({ timezone }) => {\n  const [time, setTime] = React.useState(utcToZonedTime(getUTCNow(), timezone));\n\n  React.useEffect(() => {\n    setTime(utcToZonedTime(getUTCNow(), timezone));\n  }, [timezone]);\n\n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      setTime(utcToZonedTime(getUTCNow(), timezone));\n    }, 1000)\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [timezone]);\n\n  const [date, currentTime, dow] = format(time, 'PP\\' | \\'HH:mm:ss\\' | \\'iiii').split(' | ');\n  const [hh, mm, ss] = currentTime.split(':');\n  const separator = Number(ss) & 1 ? ':' : ' ';\n\n  return (\n    <Container>\n      <span>{hh}{separator}{mm}{separator}{ss}</span>\n      <CurrentDate>{date}</CurrentDate>\n      <CurrentDate>{dow}</CurrentDate>\n    </Container>\n  )\n}\n\nexport default Clock;\n","import { format, differenceInMinutes, subMinutes, addHours } from 'date-fns';\nimport { utcToZonedTime } from 'date-fns-tz';\nimport * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport styled, { css } from 'styled-components';\nimport { getUTCNow } from '../util';\nimport { homeTimezoneSelector } from './selectors';\n\nconst backgroundGetter = (hour: number) => {\n  if (hour >= 21 || hour <= 5) {\n    return '#34495e';\n  }\n\n  if (hour >= 18 || hour <= 7) {\n    return '#DBEDFF';\n  }\n  \n  return 'white';\n}\n\nconst colorGetter = (hour: number) => hour >= 21 || hour <= 5 ? 'white' : 'black';\n\nconst Container = styled.div`\n  flex: 6;\n  margin-left: 2rem;\n  margin-right: .5rem;\n  max-width: 48rem;\n  overflow: overlay;\n`;\n\nconst Content = styled.div`\n  align-items: stretch;\n  display: flex;\n  flex-flow: row nowrap;\n  height: 100%;\n  width: auto;\n`;\n\nconst Hour = styled.div<{ date: Date, hour: number, isDST?: boolean }>`\n  ${({ date, hour, isDST }) => {\n    const [day, month] = format(date, 'd MMM').split(' ');\n\n    return css`\n      align-items: center;\n      background: ${backgroundGetter(isDST ? hour - 1 : hour)};\n      color: ${colorGetter(isDST ? hour - 1 : hour)};\n      display: flex;\n      flex-flow: column nowrap;\n      justify-content: center;\n      min-width: ${hour === 0 || hour === 23 ? '1.9rem' : '2rem'};\n      ${hour === 0 ? 'margin-left: .1rem;' : ''}\n      ${hour === 23 ? 'margin-right: .1rem;' : ''}\n\n      border-radius: ${hour === 0 ? '.7rem' : 0} ${hour === 23 ? '.7rem' : 0} ${hour === 23 ? '.7rem' : 0} ${hour === 0 ? '.7rem' : 0};\n\n      &::before {\n        content: '${hour === 0 ? day : hour}';\n        font-size: ${hour === 0 ? '.6rem' : '.8rem'};\n      }\n\n      &::after {\n        content: '${hour === 0 ? month : 'hrs'}';\n        font-size: .6rem;\n        margin: .2rem 0;\n      }\n    `;\n  }}\n`;\n\ninterface Props {\n  isDST?: boolean;\n  timezone: string;\n}\n\nconst Graph: React.FC<Props> = ({ isDST, timezone }) => {\n  const homeTimezone = useSelector(homeTimezoneSelector);\n\n  const tzCurrent = utcToZonedTime(getUTCNow(), timezone);\n  const tzHome = utcToZonedTime(getUTCNow(), homeTimezone!.timezone);\n\n  const diff = React.useMemo(() => differenceInMinutes(tzCurrent, tzHome), [tzCurrent, tzHome]);\n\n  return (\n    <Container className=\"worldtime-graph\">\n      <Content>\n        {Array(24).fill(null).map((_, ix) => {\n          const refHour = ix + Math.round(diff / 60);\n          const hourCalc = refHour % 24;\n          const hour = hourCalc >= 0 ? hourCalc : 24 + hourCalc;\n\n          return (\n            <Hour\n              date={subMinutes(addHours(tzCurrent, refHour), diff)}\n              hour={hour}\n              isDST={isDST}\n              key={ix}\n            />\n          );\n        })}\n      </Content>\n    </Container>\n  );\n};\n\nexport default Graph;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  align-items: flex-start;\n  display: flex;\n  flex: 1.5;\n  flex-flow: column nowrap;\n  justify-content: center;\n`;\n\nconst Region = styled.span`\n  color: #777;\n  font-size: .7rem;\n  margin-bottom: .3rem;\n\n  & > span {\n    background-color: #aaa;\n    border-radius: .25rem;\n    color: white;\n    font-size: .6rem;\n    margin: 0 0 0 .5rem;\n    padding: .2rem;\n  }\n`;\n\ninterface Props {\n  children: string;\n  isDST?: boolean;\n}\n\nconst Name: React.FC<Props> = ({ children, isDST }) => {\n  const [region, name] = children.replace('/', '-').replace(/_/g, ' ').split('-');\n\n  return (\n    <Container>\n      <Region>{region}{isDST && <span>DST</span>}</Region>\n      <span>{name}</span>\n    </Container>\n  );\n};\n\nexport default Name;\n","import * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled, { css } from 'styled-components';\nimport Clock from './Clock';\nimport Graph from './Graph';\nimport Name from './Name';\nimport { timezoneSelector } from './selectors';\nimport { timeActions } from './slicer';\n\nconst Container = styled.div`\n  align-items: stretch;\n  display: flex;\n  flex-flow: row nowrap;\n  margin: 2rem 0;\n`;\n\nconst Buttons = styled.div`\n  align-items: center;\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: space-around;\n  width: 2rem;\n`;\n\nconst AbbreviationContainer = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  width: 6rem;\n`;\n\nconst Abbreviation = styled.div`\n  align-items: center;\n  background-color: #e0e0e0;\n  border: 0;\n  border-radius: 50%;\n  color: #999;\n  display: flex;\n  font-size: 1.2rem;\n  font-weight: bold;\n  height: 4rem;\n  justify-content: center;\n  width: 4rem;\n`;\n\nconst HomeIcon = styled.i`\n  align-items: center;\n  background: linear-gradient(-45deg, #f39c12, #f1c40f);\n  border-radius: 50%;\n  color: white;\n  display: flex;\n  height: 2rem;\n  justify-content: center;\n  width: 2rem;\n`;\n\nconst IconButton = styled.button<{ color: string }>`\n  ${({ color }) => css`\n    border: 0;\n    border-radius: .5rem;\n    color: #999;\n    cursor: pointer;\n    height: 1.5rem;\n    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n    width: 1.5rem;\n\n    &:hover {\n      background-color: ${color}56;\n      color: ${color};\n    }\n\n    &:active, &:focus {\n      outline: none;\n    }\n  `}\n`;\n\ninterface Props {\n  isHome?: boolean;\n  timezone: string;\n}\n\nexport const Timezone: React.FC<Props> = ({ isHome, timezone }) => {\n  const dispatch = useDispatch();\n  const current = useSelector(timezoneSelector(timezone))\n\n  React.useEffect(() => {\n    if (!current) {\n      dispatch(timeActions.fetchTimezone(timezone));\n    }\n  }, [current, dispatch, timezone]);\n\n  const switchTimezone = React.useCallback(() => {\n    dispatch(timeActions.switchTimezone(timezone));\n  }, [dispatch, timezone]);\n\n  const setHome = React.useCallback(() => {\n    dispatch(timeActions.setHomeTimezone(timezone));\n  }, [dispatch, timezone]);\n\n  return (\n    <Container>\n      <Buttons>\n        {isHome ? (\n          <HomeIcon className=\"icon-home\" />\n        ) : (\n          <IconButton color=\"#f1c40f\" onClick={setHome}>\n            <i className=\"icon-home\" />\n          </IconButton>\n        )}\n        {!isHome && (\n          <IconButton color=\"#e74c3c\" onClick={switchTimezone}>\n            <i className=\"icon-remove\" />\n          </IconButton>\n        )}\n      </Buttons>\n      <AbbreviationContainer>\n        <Abbreviation>{current?.abbreviation}</Abbreviation>\n      </AbbreviationContainer>\n      <Name isDST={current?.dst}>{timezone}</Name>\n      <Clock timezone={timezone} />\n      <Graph isDST={current?.dst} timezone={timezone} />\n    </Container>\n  )\n}\n\nexport default Timezone\n","import { utcToZonedTime } from 'date-fns-tz';\nimport * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { getCurrentTimezone } from '../api';\nimport { getUTCNow, remSize } from '../util';\nimport Selector from './Selector';\nimport { homeTimezoneSelector } from './selectors';\nimport { timeActions } from './slicer';\nimport Timezone from './Timezone';\n\nconst Container = styled.div`\n  position: relative;\n`;\n\nconst HomeTimezone: React.FC = () => {\n  const dispatch = useDispatch();\n  const homeTimezone = useSelector(homeTimezoneSelector);\n  const [localTime, setLocalTime] = React.useState(new Date());\n\n  React.useEffect(() => {\n    if (!homeTimezone) {\n      getCurrentTimezone().then((timezone) => {\n        dispatch(timeActions.fulfillTimezone(timezone));\n        dispatch(timeActions.setHomeTimezone(timezone.timezone));\n      });\n    } else {\n      setTimeout(() => {\n        (document.getElementsByClassName('worldtime-graph')[0] as HTMLDivElement).scrollTo({\n          behavior: 'auto',\n          left: localTime.getHours() * remSize * 2,\n        });\n        (document.getElementsByClassName('worldtime-graph')[0] as HTMLDivElement).dispatchEvent(new Event('scroll'));\n      }, 10);\n    }\n  }, [dispatch, homeTimezone, localTime]);\n\n  React.useEffect(() => {\n    if (homeTimezone) {\n      setLocalTime(utcToZonedTime(getUTCNow(), homeTimezone.timezone))\n    }\n  }, [homeTimezone])\n\n  if (!homeTimezone) {\n    return <div>Loading</div>;\n  }\n\n  return (\n    <Container>\n      <Timezone isHome timezone={homeTimezone.timezone} />\n      <Selector localTime={localTime} />\n    </Container>\n  );\n};\n\nexport default HomeTimezone;\n","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { syncScrolls } from '../util';\nimport { selectedTimezoneSelector, timezoneListSelector } from './selectors';\nimport Timezone from './Timezone';\n\nconst Timezones: React.FC = () => {\n  const selected = useSelector(selectedTimezoneSelector);\n  const list = useSelector(timezoneListSelector);\n\n  React.useEffect(() => {\n    syncScrolls();\n  }, [selected, list]);\n\n  return (\n    <>{selected.map(timezone => timezone && <Timezone key={timezone} timezone={timezone} />)}</>\n  )\n};\n\nexport default Timezones;\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { Search } from '../Search';\nimport { StoreProvider } from '../store';\nimport HomeTimezone from './HomeTimezone';\nimport '../icons.css';\nimport Timezones from './Timezones';\n\nexport const Container = styled.div`\n  background-color: #FFFFFF;\n  border-radius: 1rem;\n  box-sizing: border-box;\n  padding: 2rem 3rem;\n  width: 100%;\n\n  & * {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    user-select: none;\n  }\n`;\n\nexport const Content = styled.div`\n  overflow: hidden;\n`;\n\nconst WorldTime: React.FC = () => (\n  <StoreProvider>\n    <Container>\n      <Search />\n      <Content>\n        <HomeTimezone />\n        <Timezones />\n      </Content>\n    </Container>\n  </StoreProvider>\n);\n\nexport default WorldTime;\n","import * as React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { WorldTime } from './WorldTime';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n  }\n`;\n\nconst Presentation = styled.div`\n  align-items: center;\n  background: linear-gradient(-45deg, orangered, deeppink);\n  box-sizing: border-box;\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n  padding: 10%;\n  width: 100vw;\n`;\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <Presentation>\n        <WorldTime />\n      </Presentation>\n    </>\n  );\n};\n\nexport default App;\n","import * as React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\nimport { WorldTime } from './WorldTime';\n\nconst testView = () => {\n  render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n(globalThis as any).testView = testView;\n\nexport default WorldTime;\nexport * from './store'\nexport * from './Search';\nexport * from './WorldTime';\n"],"sourceRoot":""}